#!/bin/bash

die () {
	echo Fatal: $@
	exit 1
}

run_remote() {
	ssh -i ${idfile} ${user}@${host} "$@"
}

echo_remove() {
	if [ -n "$2" ]
	then
		echo "$1: Removing: $@"
	else
		echo "$1: None to remove"
	fi
}

if [ -n "$1" ]
then
	conf=$1
else
	conf=/etc/backup/backup.conf
fi

source "$conf" || die "Couldn't import config $conf"

if [ "$verbosity" == "VERBOSE" ]
then
	set -x
fi

if [ "$verbosity" == "QUIET" ]
then
	exec > /dev/null
fi

echo "Starting rsync"
rsync -avzP -e "ssh -i ${idfile}" --link-dest=../current \
	--files-from=/etc/backup/dirs --exclude-from=/etc/backup/excludes \
	/ ${user}@${host}:${backupdir}/${dailybackup}

# Rsync is bad about exiting with error codes on (mostly) success
# so dont do the error-bomb until after
set -e

echo "Redirecting 'current' symlink"
run_remote "rm -f ${backupdir}/current && \
	ln -s ${backupdir}/${dailybackup} ${backupdir}/current"

#Next based on the date we're going to check if this is a weekly, monthly, 
#yearly backup and create the appropriate hardlink if so.

echo "Checking which frequencies we need this backup to go into:"
if [ $( \
	run_remote "ls ${backupdir}/weekly" | grep "^${weeklybackup}$" | \
	wc -l ) -eq 0 ]
then
	echo "Weekly"
	run_remote "cp -al ${backupdir}/${dailybackup} \
		${backupdir}/weekly/${weeklybackup}"
fi
if [ $( \
	run_remote "ls ${backupdir}/monthly" | grep "^${monthlybackup}$" | \
	wc -l ) -eq 0 ]
then
	echo "Monthly"
	run_remote "cp -al ${backupdir}/${dailybackup} \
		${backupdir}/monthly/${monthlybackup}"
fi
if [ $( \
	run_remote "ls ${backupdir}/yearly" | grep "^${yearlybackup}$" | \
	wc -l ) -eq 0 ]
then
	echo "Yearly"
	run_remote "cp -al ${backupdir}/${dailybackup} \
		${backupdir}/yearly/${yearlybackup}"
fi

echo "Cleaning up old backups."
if [ $dailykeep -ne -1 ]
then
	REMOVE=$( run_remote "find ${backupdir} -maxdepth 1 \
			-name \"${backupprefix}*\" | \
		sort | head -n-$dailykeep" )
	echo_remove "Daily" $REMOVE
	[ -n "${REMOVE}" ] && run_remote "rm -rf ${REMOVE}"
fi
if [ $weeklykeep -ne -1 ]
then
	REMOVE=$( run_remote "find ${backupdir}/weekly -maxdepth 1 \
			-name \"${backupprefix}*\" | \
		sort | head -n-$weeklykeep" )
	echo_remove "Weekly" $REMOVE
	[ -n "${REMOVE}" ] && run_remote "rm -rf ${REMOVE}"
fi
if [ $monthlykeep -ne -1 ]
then
	REMOVE=$( run_remote "find ${backupdir}/monthly -maxdepth 1 \
			-name \"${backupprefix}*\" | \
		sort | head -n-$monthlykeep" )
	echo_remove "Monthly" $REMOVE
	[ -n "${REMOVE}" ] && run_remote "rm -rf ${REMOVE}"
fi
if [ $yearlykeep -ne -1 ]
then
	REMOVE=$( run_remote "find ${backupdir}/yearly -maxdepth 1 \
			-name \"${backupprefix}*\" | \
		sort | head -n-$yearlykeep" )
	echo_remove "Yearly" $REMOVE
	[ -n "${REMOVE}" ] && run_remote "rm -rf ${REMOVE}"
fi

